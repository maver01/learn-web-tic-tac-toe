{"ast":null,"code":"var _jsxFileName = \"/home/maver02/Projects/Infrastructure_suite_project/Learning-resources/learn-web-tic-tac-toe/frontend/src/components/Game.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport Board from './Board.js'; // Import Board component\nimport calculateWinner from '../helper/functions.js'; // Import helper function\n\n// Game component\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Game() {\n  _s();\n  const [history, setHistory] = useState([Array(9).fill(null)]);\n  const [currentMove, setCurrentMove] = useState(0);\n  const xIsNext = currentMove % 2 === 0;\n  const currentSquares = history[currentMove];\n  const gameWinner = {\n    winner: -1,\n    line: [z, z, z]\n  };\n\n  // Handle the play\n  async function handlePlay(squareIndex) {\n    const squaresCopy = [...currentSquares];\n    if (gameWinner != -1 || squaresCopy[squareIndex]) {\n      return;\n    }\n    squaresCopy[squareIndex] = xIsNext ? 'X' : 'O';\n    // try send the move to the server\n    try {\n      const response = await fetch('http://localhost:5000/send-data', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          player: squaresCopy[squareIndex],\n          // send player\n          square: squareIndex,\n          // sned id of played squared\n          board: squaresCopy // send the board\n        })\n      });\n      if (!response.ok) {\n        throw new Error('Network response was not ok');\n      }\n      const data = await response.json();\n      console.log('Server response:', data.response);\n    } catch (error) {\n      console.error('There has been a problem with your fetch operation:', error);\n    }\n\n    // Update the game state if the move is valid\n    setHistory(history.slice(0, currentMove + 1).concat([squaresCopy]));\n    setCurrentMove(currentMove + 1);\n  }\n\n  // Jump to a specific move\n  function jumpTo(move) {\n    setCurrentMove(move);\n  }\n\n  // Generate move history\n  const moves = history.map((stepSquares, move) => {\n    const desc = move ? 'Go to move #' + move : 'Go to game start';\n    return /*#__PURE__*/_jsxDEV(\"li\", {\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => jumpTo(move),\n        className: move === currentMove ? 'selected' : '',\n        children: desc\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 9\n      }, this)\n    }, move, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }, this);\n  });\n\n  // Determine the winner\n  gameWinner = calculateWinner(currentSquares);\n  const winningLine = gameWinner ? gameWinner.line : null;\n\n  // Render the game\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"game\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"game-board\",\n      children: /*#__PURE__*/_jsxDEV(Board, {\n        xIsNext: xIsNext,\n        squares: currentSquares,\n        onPlay: handlePlay,\n        winningLine: winningLine\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"game-info\",\n      children: /*#__PURE__*/_jsxDEV(\"ol\", {\n        children: moves\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 71,\n    columnNumber: 5\n  }, this);\n}\n_s(Game, \"xZZdy1/aP1agxyjHn6CL01lXnXc=\");\n_c = Game;\nexport default Game;\nvar _c;\n$RefreshReg$(_c, \"Game\");","map":{"version":3,"names":["React","useState","Board","calculateWinner","jsxDEV","_jsxDEV","Game","_s","history","setHistory","Array","fill","currentMove","setCurrentMove","xIsNext","currentSquares","gameWinner","winner","line","z","handlePlay","squareIndex","squaresCopy","response","fetch","method","headers","body","JSON","stringify","player","square","board","ok","Error","data","json","console","log","error","slice","concat","jumpTo","move","moves","map","stepSquares","desc","children","onClick","className","fileName","_jsxFileName","lineNumber","columnNumber","winningLine","squares","onPlay","_c","$RefreshReg$"],"sources":["/home/maver02/Projects/Infrastructure_suite_project/Learning-resources/learn-web-tic-tac-toe/frontend/src/components/Game.js"],"sourcesContent":["import React, { useState } from 'react';\nimport Board from './Board.js'; // Import Board component\nimport calculateWinner from '../helper/functions.js'; // Import helper function\n\n// Game component\nfunction Game() {\n  const [history, setHistory] = useState([Array(9).fill(null)]);\n  const [currentMove, setCurrentMove] = useState(0); \n  const xIsNext = currentMove % 2 === 0;\n  const currentSquares = history[currentMove];\n  const gameWinner = { winner: -1, line: [z, z, z] };\n\n  // Handle the play\n  async function handlePlay(squareIndex) {\n    const squaresCopy = [...currentSquares];\n    if (gameWinner != -1 || squaresCopy[squareIndex]) {\n      return;\n    }\n    squaresCopy[squareIndex] = xIsNext ? 'X' : 'O';\n    // try send the move to the server\n    try {\n      const response = await fetch('http://localhost:5000/send-data', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n        body: JSON.stringify({\n          player: squaresCopy[squareIndex], // send player\n          square: squareIndex, // sned id of played squared\n          board: squaresCopy, // send the board\n        }),\n      });\n      if (!response.ok) {\n        throw new Error('Network response was not ok');\n      }\n      const data = await response.json();\n      console.log('Server response:', data.response);\n    } catch (error) {\n      console.error('There has been a problem with your fetch operation:', error);\n    }\n\n    \n    // Update the game state if the move is valid\n    setHistory(history.slice(0, currentMove + 1).concat([squaresCopy]));\n    setCurrentMove(currentMove + 1);\n  }\n\n  // Jump to a specific move\n  function jumpTo(move) {\n    setCurrentMove(move);\n  }\n\n  // Generate move history\n  const moves = history.map((stepSquares, move) => {\n    const desc = move ? 'Go to move #' + move : 'Go to game start';\n    return (\n      <li key={move}>\n        <button onClick={() => jumpTo(move)} className={move === currentMove ? 'selected' : ''}>\n          {desc}\n        </button>\n      </li>\n    );\n  });\n\n  // Determine the winner\n  gameWinner = calculateWinner(currentSquares);\n  const winningLine = gameWinner ? gameWinner.line : null;\n\n  // Render the game\n  return (\n    <div className=\"game\">\n      <div className=\"game-board\">\n        <Board\n          xIsNext={xIsNext}\n          squares={currentSquares}\n          onPlay={handlePlay}\n          winningLine={winningLine}\n        />\n      </div>\n      <div className=\"game-info\">\n        <ol>{moves}</ol>\n      </div>\n    </div>\n  );\n}\n\nexport default Game; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}