{"ast":null,"code":"var _jsxFileName = \"/home/maver02/Projects/Infrastructure_suite_project/Website/tic-tac-toe/src/App.js\",\n  _s = $RefreshSig$();\n// Import necessary libraries and functions\nimport React, { useState } from 'react';\nimport './styles.css'; // Import CSS for styling\nimport Square from './components/Square.js'; // Import Square component\n\n// Board component\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction Board({\n  xIsNext,\n  squares,\n  onPlay,\n  winningLine\n}) {\n  function handleClick(i) {\n    if (calculateWinner(squares) || squares[i]) {\n      return;\n    }\n    onPlay(i);\n  }\n\n  // Determine the status of the game\n  let status;\n  const winner = calculateWinner(squares);\n  if (winner) {\n    status = 'Winner: ' + winner;\n  } else {\n    status = 'Next player: ' + (xIsNext ? 'X' : 'O');\n  }\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"status\",\n      children: status\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }, this), [0, 1, 2].map(row => /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"board-row\",\n      children: [0, 1, 2].map(col => {\n        const index = row * 3 + col;\n        const isHighlight = winningLine && winningLine.includes(index);\n        return /*#__PURE__*/_jsxDEV(Square, {\n          value: squares[index],\n          onSquareClick: () => handleClick(index),\n          highlight: isHighlight\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 15\n        }, this);\n      })\n    }, row, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 9\n    }, this))]\n  }, void 0, true);\n}\n\n// Game component\n_c = Board;\nexport default function Game() {\n  _s();\n  const [history, setHistory] = useState([Array(9).fill(null)]);\n  const [currentMove, setCurrentMove] = useState(0);\n  const xIsNext = currentMove % 2 === 0;\n  const currentSquares = history[currentMove];\n\n  // Handle the play\n  function handlePlay(squareIndex) {\n    const squaresCopy = [...currentSquares];\n    if (calculateWinner(squaresCopy) || squaresCopy[squareIndex]) {\n      return;\n    }\n    squaresCopy[squareIndex] = xIsNext ? 'X' : 'O';\n    setHistory(history.slice(0, currentMove + 1).concat([squaresCopy]));\n    setCurrentMove(currentMove + 1);\n  }\n\n  // Jump to a specific move\n  function jumpTo(move) {\n    setCurrentMove(move);\n  }\n\n  // Generate move history\n  const moves = history.map((stepSquares, move) => {\n    const desc = move ? 'Go to move #' + move : 'Go to game start';\n    return /*#__PURE__*/_jsxDEV(\"li\", {\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => jumpTo(move),\n        className: move === currentMove ? 'selected' : '',\n        children: desc\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 9\n      }, this)\n    }, move, false, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 7\n    }, this);\n  });\n\n  // Determine the winner\n  const winner = calculateWinner(currentSquares);\n  const winningLine = winner ? winner.line : null;\n\n  // Render the game\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"game\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"game-board\",\n      children: /*#__PURE__*/_jsxDEV(Board, {\n        xIsNext: xIsNext,\n        squares: currentSquares,\n        onPlay: handlePlay,\n        winningLine: winningLine\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"game-info\",\n      children: /*#__PURE__*/_jsxDEV(\"ol\", {\n        children: moves\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 89,\n    columnNumber: 5\n  }, this);\n}\n\n// Calculate the winner of the game\n_s(Game, \"xZZdy1/aP1agxyjHn6CL01lXnXc=\");\n_c2 = Game;\nfunction calculateWinner(squares) {\n  const lines = [[0, 1, 2], [3, 4, 5], [6, 7, 8], [0, 3, 6], [1, 4, 7], [2, 5, 8], [0, 4, 8], [2, 4, 6]];\n  for (let i = 0; i < lines.length; i++) {\n    const [a, b, c] = lines[i];\n    if (squares[a] && squares[a] === squares[b] && squares[a] === squares[c]) {\n      return {\n        winner: squares[a],\n        line: [a, b, c]\n      };\n    }\n  }\n  return null;\n}\nvar _c, _c2;\n$RefreshReg$(_c, \"Board\");\n$RefreshReg$(_c2, \"Game\");","map":{"version":3,"names":["React","useState","Square","jsxDEV","_jsxDEV","Fragment","_Fragment","Board","xIsNext","squares","onPlay","winningLine","handleClick","i","calculateWinner","status","winner","children","className","fileName","_jsxFileName","lineNumber","columnNumber","map","row","col","index","isHighlight","includes","value","onSquareClick","highlight","_c","Game","_s","history","setHistory","Array","fill","currentMove","setCurrentMove","currentSquares","handlePlay","squareIndex","squaresCopy","slice","concat","jumpTo","move","moves","stepSquares","desc","onClick","line","_c2","lines","length","a","b","c","$RefreshReg$"],"sources":["/home/maver02/Projects/Infrastructure_suite_project/Website/tic-tac-toe/src/App.js"],"sourcesContent":["// Import necessary libraries and functions\nimport React, { useState } from 'react';\nimport './styles.css'; // Import CSS for styling\nimport Square from './components/Square.js'; // Import Square component\n\n\n// Board component\nfunction Board({ xIsNext, squares, onPlay, winningLine }) {\n  function handleClick(i) {\n    if (calculateWinner(squares) || squares[i]) {\n      return;\n    }\n    onPlay(i);\n  }\n\n  // Determine the status of the game\n  let status;\n  const winner = calculateWinner(squares);\n  if (winner) {\n    status = 'Winner: ' + winner;\n  } else {\n    status = 'Next player: ' + (xIsNext ? 'X' : 'O');\n  }\n\n  return (\n    <>\n      <div className=\"status\">{status}</div>\n      {[0, 1, 2].map((row) => (\n        <div className=\"board-row\" key={row}>\n          {[0, 1, 2].map((col) => {\n            const index = row * 3 + col;\n            const isHighlight = winningLine && winningLine.includes(index);\n            return (\n              <Square\n                key={index}\n                value={squares[index]}\n                onSquareClick={() => handleClick(index)}\n                highlight={isHighlight}\n              />\n            );\n          })}\n        </div>\n      ))}\n    </>\n  );\n}\n\n// Game component\nexport default function Game() {\n  const [history, setHistory] = useState([Array(9).fill(null)]);\n  const [currentMove, setCurrentMove] = useState(0);\n  const xIsNext = currentMove % 2 === 0;\n  const currentSquares = history[currentMove];\n\n  // Handle the play\n  function handlePlay(squareIndex) {\n    const squaresCopy = [...currentSquares];\n    if (calculateWinner(squaresCopy) || squaresCopy[squareIndex]) {\n      return;\n    }\n    squaresCopy[squareIndex] = xIsNext ? 'X' : 'O';\n    setHistory(history.slice(0, currentMove + 1).concat([squaresCopy]));\n    setCurrentMove(currentMove + 1);\n  }\n\n  // Jump to a specific move\n  function jumpTo(move) {\n    setCurrentMove(move);\n  }\n\n  // Generate move history\n  const moves = history.map((stepSquares, move) => {\n    const desc = move ? 'Go to move #' + move : 'Go to game start';\n    return (\n      <li key={move}>\n        <button onClick={() => jumpTo(move)} className={move === currentMove ? 'selected' : ''}>\n          {desc}\n        </button>\n      </li>\n    );\n  });\n\n  // Determine the winner\n  const winner = calculateWinner(currentSquares);\n  const winningLine = winner ? winner.line : null;\n\n  // Render the game\n  return (\n    <div className=\"game\">\n      <div className=\"game-board\">\n        <Board\n          xIsNext={xIsNext}\n          squares={currentSquares}\n          onPlay={handlePlay}\n          winningLine={winningLine}\n        />\n      </div>\n      <div className=\"game-info\">\n        <ol>{moves}</ol>\n      </div>\n    </div>\n  );\n}\n\n// Calculate the winner of the game\nfunction calculateWinner(squares) {\n  const lines = [\n    [0, 1, 2],\n    [3, 4, 5],\n    [6, 7, 8],\n    [0, 3, 6],\n    [1, 4, 7],\n    [2, 5, 8],\n    [0, 4, 8],\n    [2, 4, 6],\n  ];\n  for (let i = 0; i < lines.length; i++) {\n    const [a, b, c] = lines[i];\n    if (squares[a] && squares[a] === squares[b] && squares[a] === squares[c]) {\n      return { winner: squares[a], line: [a, b, c] };\n    }\n  }\n  return null;\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}