{"ast":null,"code":"var _jsxFileName = \"/home/maver02/Projects/Infrastructure_suite_project/Website/tic-tac-toe/src/App.js\",\n  _s = $RefreshSig$();\n// Import necessary libraries and functions\nimport React, { useState } from 'react';\nimport './styles.css'; // Import CSS for styling\n\n// Square component\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction Square({\n  value,\n  onSquareClick,\n  highlight\n}) {\n  return /*#__PURE__*/_jsxDEV(\"button\", {\n    className: `square ${highlight ? 'highlight' : ''}`,\n    onClick: onSquareClick,\n    children: value\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 8,\n    columnNumber: 5\n  }, this);\n}\n\n// Board component\n_c = Square;\nfunction Board({\n  xIsNext,\n  squares,\n  onPlay,\n  winningLine\n}) {\n  function handleClick(i) {\n    if (calculateWinner(squares) || squares[i]) {\n      return;\n    }\n    onPlay(i);\n  }\n\n  // Determine the status of the game\n  let status;\n  const winner = calculateWinner(squares);\n  if (winner) {\n    status = 'Winner: ' + winner;\n  } else {\n    status = 'Next player: ' + (xIsNext ? 'X' : 'O');\n  }\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"status\",\n      children: status\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this), [0, 1, 2].map(row => /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"board-row\",\n      children: [0, 1, 2].map(col => {\n        const index = row * 3 + col;\n        const isHighlight = winningLine && winningLine.includes(index);\n        return /*#__PURE__*/_jsxDEV(Square, {\n          value: squares[index],\n          onSquareClick: () => handleClick(index),\n          highlight: isHighlight\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 15\n        }, this);\n      })\n    }, row, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 9\n    }, this))]\n  }, void 0, true);\n}\n\n// Game component\n_c2 = Board;\nexport default function Game() {\n  _s();\n  const [history, setHistory] = useState([Array(9).fill(null)]);\n  const [currentMove, setCurrentMove] = useState(0);\n  const xIsNext = currentMove % 2 === 0;\n  const currentSquares = history[currentMove];\n\n  // Handle the play\n  function handlePlay(squareIndex) {\n    const squaresCopy = [...currentSquares];\n    if (calculateWinner(squaresCopy) || squaresCopy[squareIndex]) {\n      return;\n    }\n    squaresCopy[squareIndex] = xIsNext ? 'X' : 'O';\n    setHistory(history.slice(0, currentMove + 1).concat([squaresCopy]));\n    setCurrentMove(currentMove + 1);\n  }\n\n  // Jump to a specific move\n  function jumpTo(move) {\n    setCurrentMove(move);\n  }\n\n  // Generate move history\n  const moves = history.map((stepSquares, move) => {\n    const desc = move ? 'Go to move #' + move : 'Go to game start';\n    return /*#__PURE__*/_jsxDEV(\"li\", {\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => jumpTo(move),\n        className: move === currentMove ? 'selected' : '',\n        children: desc\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 9\n      }, this)\n    }, move, false, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 7\n    }, this);\n  });\n\n  // Determine the winner\n  const winner = calculateWinner(currentSquares);\n  const winningLine = winner ? winner.line : null;\n\n  // Render the game\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"game\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"game-board\",\n      children: /*#__PURE__*/_jsxDEV(Board, {\n        xIsNext: xIsNext,\n        squares: currentSquares,\n        onPlay: handlePlay,\n        winningLine: winningLine\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"game-info\",\n      children: /*#__PURE__*/_jsxDEV(\"ol\", {\n        children: moves\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 96,\n    columnNumber: 5\n  }, this);\n}\n\n// Calculate the winner of the game\n_s(Game, \"xZZdy1/aP1agxyjHn6CL01lXnXc=\");\n_c3 = Game;\nfunction calculateWinner(squares) {\n  const lines = [[0, 1, 2], [3, 4, 5], [6, 7, 8], [0, 3, 6], [1, 4, 7], [2, 5, 8], [0, 4, 8], [2, 4, 6]];\n  for (let i = 0; i < lines.length; i++) {\n    const [a, b, c] = lines[i];\n    if (squares[a] && squares[a] === squares[b] && squares[a] === squares[c]) {\n      return {\n        winner: squares[a],\n        line: [a, b, c]\n      };\n    }\n  }\n  return null;\n}\nvar _c, _c2, _c3;\n$RefreshReg$(_c, \"Square\");\n$RefreshReg$(_c2, \"Board\");\n$RefreshReg$(_c3, \"Game\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","Fragment","_Fragment","Square","value","onSquareClick","highlight","className","onClick","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","Board","xIsNext","squares","onPlay","winningLine","handleClick","i","calculateWinner","status","winner","map","row","col","index","isHighlight","includes","_c2","Game","_s","history","setHistory","Array","fill","currentMove","setCurrentMove","currentSquares","handlePlay","squareIndex","squaresCopy","slice","concat","jumpTo","move","moves","stepSquares","desc","line","_c3","lines","length","a","b","c","$RefreshReg$"],"sources":["/home/maver02/Projects/Infrastructure_suite_project/Website/tic-tac-toe/src/App.js"],"sourcesContent":["// Import necessary libraries and functions\nimport React, { useState } from 'react';\nimport './styles.css'; // Import CSS for styling\n\n// Square component\nfunction Square({ value, onSquareClick, highlight }) {\n  return (\n    <button className={`square ${highlight ? 'highlight' : ''}`} onClick={onSquareClick}>\n      {value}\n    </button>\n  );\n}\n\n// Board component\nfunction Board({ xIsNext, squares, onPlay, winningLine }) {\n  function handleClick(i) {\n    if (calculateWinner(squares) || squares[i]) {\n      return;\n    }\n    onPlay(i);\n  }\n\n  // Determine the status of the game\n  let status;\n  const winner = calculateWinner(squares);\n  if (winner) {\n    status = 'Winner: ' + winner;\n  } else {\n    status = 'Next player: ' + (xIsNext ? 'X' : 'O');\n  }\n\n  return (\n    <>\n      <div className=\"status\">{status}</div>\n      {[0, 1, 2].map((row) => (\n        <div className=\"board-row\" key={row}>\n          {[0, 1, 2].map((col) => {\n            const index = row * 3 + col;\n            const isHighlight = winningLine && winningLine.includes(index);\n            return (\n              <Square\n                key={index}\n                value={squares[index]}\n                onSquareClick={() => handleClick(index)}\n                highlight={isHighlight}\n              />\n            );\n          })}\n        </div>\n      ))}\n    </>\n  );\n}\n\n// Game component\nexport default function Game() {\n  const [history, setHistory] = useState([Array(9).fill(null)]);\n  const [currentMove, setCurrentMove] = useState(0);\n  const xIsNext = currentMove % 2 === 0;\n  const currentSquares = history[currentMove];\n\n  // Handle the play\n  function handlePlay(squareIndex) {\n    const squaresCopy = [...currentSquares];\n    if (calculateWinner(squaresCopy) || squaresCopy[squareIndex]) {\n      return;\n    }\n    squaresCopy[squareIndex] = xIsNext ? 'X' : 'O';\n    setHistory(history.slice(0, currentMove + 1).concat([squaresCopy]));\n    setCurrentMove(currentMove + 1);\n  }\n\n  // Jump to a specific move\n  function jumpTo(move) {\n    setCurrentMove(move);\n  }\n\n  // Generate move history\n  const moves = history.map((stepSquares, move) => {\n    const desc = move ? 'Go to move #' + move : 'Go to game start';\n    return (\n      <li key={move}>\n        <button onClick={() => jumpTo(move)} className={move === currentMove ? 'selected' : ''}>\n          {desc}\n        </button>\n      </li>\n    );\n  });\n\n  // Determine the winner\n  const winner = calculateWinner(currentSquares);\n  const winningLine = winner ? winner.line : null;\n\n  // Render the game\n  return (\n    <div className=\"game\">\n      <div className=\"game-board\">\n        <Board\n          xIsNext={xIsNext}\n          squares={currentSquares}\n          onPlay={handlePlay}\n          winningLine={winningLine}\n        />\n      </div>\n      <div className=\"game-info\">\n        <ol>{moves}</ol>\n      </div>\n    </div>\n  );\n}\n\n// Calculate the winner of the game\nfunction calculateWinner(squares) {\n  const lines = [\n    [0, 1, 2],\n    [3, 4, 5],\n    [6, 7, 8],\n    [0, 3, 6],\n    [1, 4, 7],\n    [2, 5, 8],\n    [0, 4, 8],\n    [2, 4, 6],\n  ];\n  for (let i = 0; i < lines.length; i++) {\n    const [a, b, c] = lines[i];\n    if (squares[a] && squares[a] === squares[b] && squares[a] === squares[c]) {\n      return { winner: squares[a], line: [a, b, c] };\n    }\n  }\n  return null;\n}\n"],"mappings":";;AAAA;AACA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAO,cAAc,CAAC,CAAC;;AAEvB;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AACA,SAASC,MAAMA,CAAC;EAAEC,KAAK;EAAEC,aAAa;EAAEC;AAAU,CAAC,EAAE;EACnD,oBACEN,OAAA;IAAQO,SAAS,EAAG,UAASD,SAAS,GAAG,WAAW,GAAG,EAAG,EAAE;IAACE,OAAO,EAAEH,aAAc;IAAAI,QAAA,EACjFL;EAAK;IAAAM,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACA,CAAC;AAEb;;AAEA;AAAAC,EAAA,GARSX,MAAM;AASf,SAASY,KAAKA,CAAC;EAAEC,OAAO;EAAEC,OAAO;EAAEC,MAAM;EAAEC;AAAY,CAAC,EAAE;EACxD,SAASC,WAAWA,CAACC,CAAC,EAAE;IACtB,IAAIC,eAAe,CAACL,OAAO,CAAC,IAAIA,OAAO,CAACI,CAAC,CAAC,EAAE;MAC1C;IACF;IACAH,MAAM,CAACG,CAAC,CAAC;EACX;;EAEA;EACA,IAAIE,MAAM;EACV,MAAMC,MAAM,GAAGF,eAAe,CAACL,OAAO,CAAC;EACvC,IAAIO,MAAM,EAAE;IACVD,MAAM,GAAG,UAAU,GAAGC,MAAM;EAC9B,CAAC,MAAM;IACLD,MAAM,GAAG,eAAe,IAAIP,OAAO,GAAG,GAAG,GAAG,GAAG,CAAC;EAClD;EAEA,oBACEhB,OAAA,CAAAE,SAAA;IAAAO,QAAA,gBACET,OAAA;MAAKO,SAAS,EAAC,QAAQ;MAAAE,QAAA,EAAEc;IAAM;MAAAb,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAM,CAAC,EACrC,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAACY,GAAG,CAAEC,GAAG,iBACjB1B,OAAA;MAAKO,SAAS,EAAC,WAAW;MAAAE,QAAA,EACvB,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAACgB,GAAG,CAAEE,GAAG,IAAK;QACtB,MAAMC,KAAK,GAAGF,GAAG,GAAG,CAAC,GAAGC,GAAG;QAC3B,MAAME,WAAW,GAAGV,WAAW,IAAIA,WAAW,CAACW,QAAQ,CAACF,KAAK,CAAC;QAC9D,oBACE5B,OAAA,CAACG,MAAM;UAELC,KAAK,EAAEa,OAAO,CAACW,KAAK,CAAE;UACtBvB,aAAa,EAAEA,CAAA,KAAMe,WAAW,CAACQ,KAAK,CAAE;UACxCtB,SAAS,EAAEuB;QAAY,GAHlBD,KAAK;UAAAlB,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAIX,CAAC;MAEN,CAAC;IAAC,GAZ4Ba,GAAG;MAAAhB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAa9B,CACN,CAAC;EAAA,eACF,CAAC;AAEP;;AAEA;AAAAkB,GAAA,GAxCShB,KAAK;AAyCd,eAAe,SAASiB,IAAIA,CAAA,EAAG;EAAAC,EAAA;EAC7B,MAAM,CAACC,OAAO,EAAEC,UAAU,CAAC,GAAGrC,QAAQ,CAAC,CAACsC,KAAK,CAAC,CAAC,CAAC,CAACC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC;EAC7D,MAAM,CAACC,WAAW,EAAEC,cAAc,CAAC,GAAGzC,QAAQ,CAAC,CAAC,CAAC;EACjD,MAAMkB,OAAO,GAAGsB,WAAW,GAAG,CAAC,KAAK,CAAC;EACrC,MAAME,cAAc,GAAGN,OAAO,CAACI,WAAW,CAAC;;EAE3C;EACA,SAASG,UAAUA,CAACC,WAAW,EAAE;IAC/B,MAAMC,WAAW,GAAG,CAAC,GAAGH,cAAc,CAAC;IACvC,IAAIlB,eAAe,CAACqB,WAAW,CAAC,IAAIA,WAAW,CAACD,WAAW,CAAC,EAAE;MAC5D;IACF;IACAC,WAAW,CAACD,WAAW,CAAC,GAAG1B,OAAO,GAAG,GAAG,GAAG,GAAG;IAC9CmB,UAAU,CAACD,OAAO,CAACU,KAAK,CAAC,CAAC,EAAEN,WAAW,GAAG,CAAC,CAAC,CAACO,MAAM,CAAC,CAACF,WAAW,CAAC,CAAC,CAAC;IACnEJ,cAAc,CAACD,WAAW,GAAG,CAAC,CAAC;EACjC;;EAEA;EACA,SAASQ,MAAMA,CAACC,IAAI,EAAE;IACpBR,cAAc,CAACQ,IAAI,CAAC;EACtB;;EAEA;EACA,MAAMC,KAAK,GAAGd,OAAO,CAACT,GAAG,CAAC,CAACwB,WAAW,EAAEF,IAAI,KAAK;IAC/C,MAAMG,IAAI,GAAGH,IAAI,GAAG,cAAc,GAAGA,IAAI,GAAG,kBAAkB;IAC9D,oBACE/C,OAAA;MAAAS,QAAA,eACET,OAAA;QAAQQ,OAAO,EAAEA,CAAA,KAAMsC,MAAM,CAACC,IAAI,CAAE;QAACxC,SAAS,EAAEwC,IAAI,KAAKT,WAAW,GAAG,UAAU,GAAG,EAAG;QAAA7B,QAAA,EACpFyC;MAAI;QAAAxC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACC;IAAC,GAHFkC,IAAI;MAAArC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAIT,CAAC;EAET,CAAC,CAAC;;EAEF;EACA,MAAMW,MAAM,GAAGF,eAAe,CAACkB,cAAc,CAAC;EAC9C,MAAMrB,WAAW,GAAGK,MAAM,GAAGA,MAAM,CAAC2B,IAAI,GAAG,IAAI;;EAE/C;EACA,oBACEnD,OAAA;IAAKO,SAAS,EAAC,MAAM;IAAAE,QAAA,gBACnBT,OAAA;MAAKO,SAAS,EAAC,YAAY;MAAAE,QAAA,eACzBT,OAAA,CAACe,KAAK;QACJC,OAAO,EAAEA,OAAQ;QACjBC,OAAO,EAAEuB,cAAe;QACxBtB,MAAM,EAAEuB,UAAW;QACnBtB,WAAW,EAAEA;MAAY;QAAAT,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC1B;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACC,CAAC,eACNb,OAAA;MAAKO,SAAS,EAAC,WAAW;MAAAE,QAAA,eACxBT,OAAA;QAAAS,QAAA,EAAKuC;MAAK;QAAAtC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAK;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACb,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV;;AAEA;AAAAoB,EAAA,CAxDwBD,IAAI;AAAAoB,GAAA,GAAJpB,IAAI;AAyD5B,SAASV,eAAeA,CAACL,OAAO,EAAE;EAChC,MAAMoC,KAAK,GAAG,CACZ,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,EACT,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,EACT,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,EACT,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,EACT,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,EACT,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,EACT,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,EACT,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CACV;EACD,KAAK,IAAIhC,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGgC,KAAK,CAACC,MAAM,EAAEjC,CAAC,EAAE,EAAE;IACrC,MAAM,CAACkC,CAAC,EAAEC,CAAC,EAAEC,CAAC,CAAC,GAAGJ,KAAK,CAAChC,CAAC,CAAC;IAC1B,IAAIJ,OAAO,CAACsC,CAAC,CAAC,IAAItC,OAAO,CAACsC,CAAC,CAAC,KAAKtC,OAAO,CAACuC,CAAC,CAAC,IAAIvC,OAAO,CAACsC,CAAC,CAAC,KAAKtC,OAAO,CAACwC,CAAC,CAAC,EAAE;MACxE,OAAO;QAAEjC,MAAM,EAAEP,OAAO,CAACsC,CAAC,CAAC;QAAEJ,IAAI,EAAE,CAACI,CAAC,EAAEC,CAAC,EAAEC,CAAC;MAAE,CAAC;IAChD;EACF;EACA,OAAO,IAAI;AACb;AAAC,IAAA3C,EAAA,EAAAiB,GAAA,EAAAqB,GAAA;AAAAM,YAAA,CAAA5C,EAAA;AAAA4C,YAAA,CAAA3B,GAAA;AAAA2B,YAAA,CAAAN,GAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}